plugins {
	id 'fabric-loom' version "1.6-SNAPSHOT"
	id 'io.github.ladysnake.chenille' version '0.+'
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

base {
	archivesName = project.archives_base_name
}

//tasks.withType(JavaCompile) {
//	options.compilerArgs << '-Xlint:unchecked'
//	options.deprecation = true
//}

//loom {
//	splitEnvironmentSourceSets()
//
//	mods {
//		"impaled" {
//			sourceSet sourceSets.main
//			sourceSet sourceSets.client
//		}
//	}
//}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

version = project.mod_version
group = project.maven_group

chenille {
	javaVersion = 17
	configurePublishing {
		withCurseforgeRelease()
		withGithubRelease()
		withLadysnakeMaven()
		withModrinthRelease()
	}
}

repositories {
	maven {
		name 'Ladysnake Mods'
		url "https://maven.ladysnake.org/releases"
	}
	maven {
		name 'Ladysnake Mods'
		url 'https://maven.ladysnake.org/snapshots'
	}
	// MixinExtras
	maven {
		url "https://jitpack.io"
	}
	maven { url "https://api.modrinth.com/maven" }
	// modmenu
	maven {
		name 'TerraformersMC'
		url 'https://maven.terraformersmc.com/releases/'
	}
	// MialeeMisc
	maven { url "https://maven.willbl.dev/releases" }
	// bookshelf
	maven { url 'https://maven.blamejared.com/' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation(libs.mialeemisc) {
		exclude group: "dev.emi"
	}
	include (libs.mialeemisc)

	modCompileOnly "dev.emi:emi-fabric:${emi_version}"
	modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

	modRuntimeOnly(libs.modmenu) {
		exclude group: "net.fabricmc"
	}
	modCompileOnly(libs.enchancement)
	modCompileOnly(libs.cca.base)
	modRuntimeOnly(libs.bundles.enchancement) {
		exclude group: "net.fabricmc.fabric-api"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
